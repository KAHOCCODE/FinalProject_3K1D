@{
    Layout = null;
}
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Chọn Ghế</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background: linear-gradient(135deg, #0f2027, #203a43, #2c5364);
            color: white;
            font-family: 'Arial', sans-serif;
        }

        .screen-panel {
            text-align: center;
            background: linear-gradient(45deg, #434343, #000);
            color: white;
            padding: 15px;
            margin-bottom: 20px;
            font-size: 1.4em;
            border-radius: 8px;
            box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.3);
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .seats-panel {
            display: grid;
            grid-template-columns: repeat(10, 1fr);
            gap: 12px;
            padding: 25px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 15px;
            box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.5);
        }

        .seat {
            border-radius: 6px;
            text-align: center;
            color: white;
            padding: 20px 0;
            font-weight: bold;
            transition: transform 0.2s, background-color 0.3s;
            cursor: pointer;
        }

        .seat:hover {
            transform: scale(1.1);
        }

        /* Seat color classes */
        .seat.vip {
            background-color: #ff5722;
        }

        .seat.vip:hover {
            background-color: #e64a19;
        }

        .seat.deluxe {
            background-color: #00bcd4;
        }

        .seat.deluxe:hover {
            background-color: #00796b;
        }

        .seat.standard {
            background-color: #8bc34a;
        }

        .seat.standard:hover {
            background-color: #689f38;
        }

        .seat.selected {
            background-color: #ffeb3b;
            color: #000;
        }

        .footer {
            background: linear-gradient(45deg, #333, #555);
            border-radius: 15px;
            margin-top: 20px;
            padding: 20px;
            box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.3);
        }

        .footer-content {
            display: flex;
            flex-direction: column;
        }

        .info-panel p {
            margin: 0;
        }

        .summary-panel {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            padding: 15px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
            margin-top: 20px;
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
        }

        .summary-info p {
            margin: 5px 0;
        }

        .btn-container .btn {
            margin-left: 10px;
            padding: 12px 30px;
            font-size: 1.2em;
            border-radius: 50px;
            transition: background-color 0.3s, transform 0.2s;
        }

        .btn-container .btn-pay {
            background-color: #ff9800;
            border-color: #ff9800;
        }

        .btn-container .btn-pay:hover {
            background-color: #e65100;
            transform: scale(1.05);
        }

        .btn-container .btn-cancel {
            background-color: #f44336;
            border-color: #f44336;
        }

        .btn-container .btn-cancel:hover {
            background-color: #c62828;
            transform: scale(1.05);
        }

        .legend-panel {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 8px;
            padding: 15px;
            margin-top: 20px;
            text-align: center;
            box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.3);
        }

        .legend span {
            display: inline-block;
            margin: 0 15px;
            padding: 5px 15px;
            border-radius: 5px;
            font-weight: bold;
        }

        .legend .vip {
            background-color: #ff5722;
            color: white;
        }

        .legend .deluxe {
            background-color: #00bcd4;
            color: white;
        }

        .legend .standard {
            background-color: #8bc34a;
            color: white;
        }

        .legend .selected {
            background-color: #ffeb3b;
            color: #000;
        }

        .legend .booked {
            background-color: #b0bec5;
            color: #000;
        }
    </style>
</head>
<body>
    <div class="container mt-4">
        <div class="screen-panel">Màn Hình</div>

        <div class="seats-panel"></div>

        <div class="legend-panel mt-4">
            <div class="legend">
                <span class="vip">VIP</span>
                <span class="deluxe">Deluxe</span>
                <span class="standard">Standard</span>
                <span class="selected">Ghế đang chọn</span>
                <span class="booked">Ghế đã được đặt</span>
            </div>
        </div>

        <div class="footer mt-4">
            <div class="footer-content">
                <div class="info-panel">
                    <p><strong>Tên phim:</strong> @ViewBag.MovieName</p>
                    <p><strong>Giờ Chiếu:</strong>
                        @foreach (var time in ViewBag.SelectedTimes)
                        {
                            <li>@time</li>
                        }
                    </p>
                    <p><strong>Mã ghế ngồi:</strong> <span id="selected-seat-ids"></span></p>
                </div>
                <div class="summary-panel">
                    <div class="summary-info">
                        <p><strong>Tạm tính:</strong> <span id="temp-price">0 VND</span></p>
                        <p><strong>Giảm giá:</strong> <span id="discount">0 VND</span></p>
                        <p><strong>Tổng cộng:</strong> <span id="total-price">0 VND</span></p>
                    </div>
                    <div class="btn-container">
                        <button type="button" class="btn btn-cancel">Hủy</button>
                        <button type="button" class="btn btn-pay btn-warning">Thanh Toán</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        const seatPanel = document.querySelector('.seats-panel');
        const rows = 8;
        const columns = 10;
        const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
        const selectedSeats = new Set(); // Store selected seat IDs
        const ticketPrice = 100000; // Example ticket price (in VND)
        let totalPrice = 0; // Variable to store the total price

        // Function to update the total price display
        function updateTotalPrice() {
            const totalElement = document.querySelector('.summary-info p:last-child');
            totalPrice = selectedSeats.size * ticketPrice;
            totalElement.textContent = `Tổng cộng: ${totalPrice.toLocaleString()} VND`;
        }

        // Function to update the displayed selected seat IDs
        function updateSelectedSeatDisplay() {
            const selectedSeatIdsElement = document.getElementById('selected-seat-ids');
            selectedSeatIdsElement.textContent = Array.from(selectedSeats).join(', ');

            // Save selected seats to session via an API call
            saveSelectedSeatsToSession(Array.from(selectedSeats));
        }

        // Function to save selected seat IDs to session
        function saveSelectedSeatsToSession(seatIds) {
            fetch('/Home/SaveSelectedSeats', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': '@Html.AntiForgeryToken()' // CSRF protection
                },
                body: JSON.stringify(seatIds)
            }).then(response => {
                if (!response.ok) {
                    throw new Error('Failed to save selected seats to session');
                }
                return response.json();
            }).then(data => {
                console.log('Selected seats saved to session:', data);
            }).catch(error => {
                console.error('Error:', error);
            });
        }

        for (let i = 0; i < rows; i++) {
            for (let j = 0; j < columns; j++) {
                const seat = document.createElement('div');
                seat.classList.add('seat');

                // Assign classes based on row (VIP, Deluxe, Standard)
                if (i === 0) {
                    seat.classList.add('vip');
                } else if (i === 1 || i === 2) {
                    seat.classList.add('deluxe');
                } else {
                    seat.classList.add('standard');
                }

                const seatId = `${alphabet[i]}${j + 1}`;
                seat.textContent = seatId;

                // Event listener for selecting a seat
                seat.addEventListener('click', () => {
                    if (seat.classList.contains('selected')) {
                        seat.classList.remove('selected');
                        selectedSeats.delete(seatId); // Remove seat ID from the selected seats
                    } else {
                        seat.classList.add('selected');
                        selectedSeats.add(seatId); // Add seat ID to the selected seats
                    }

                    // Update total price and selected seat display
                    updateTotalPrice();
                    updateSelectedSeatDisplay();
                });

                seatPanel.appendChild(seat);
            }
        }

        // Initial updates
        updateTotalPrice();
        updateSelectedSeatDisplay();
    </script>
    
</body>
</html>
