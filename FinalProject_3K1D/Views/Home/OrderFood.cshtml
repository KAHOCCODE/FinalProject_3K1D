@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Food & Drinks</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #343a40; /* Nền tối hơn */
            color: #f8f9fa; /* Văn bản sáng hơn để tương phản */
            margin: 0;
            padding: 0;
            min-height: 100vh; /* Đảm bảo chiều cao tối thiểu của body */
            display: flex;
            flex-direction: column;
        }

        .main-content {
            flex: 1;
            padding-bottom: 100px; /* Để không bị che khuất bởi footer */
        }

        .food-item {
            background-color: #495057; /* Nền của các mục thức ăn và đồ uống */
            border-radius: 10px;
            padding: 20px;
            text-align: center;
            margin: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

            .food-item img {
                width: 100%;
                height: auto;
                border-radius: 10px;
            }

            .food-item .name, .food-item .price {
                margin: 10px 0;
                color: #e9ecef; /* Màu văn bản sáng hơn */
            }

        .quantity-buttons {
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .quantity-buttons button {
                width: 40px;
                height: 40px;
                margin: 0 5px;
                color: #ffffff; /* Văn bản nút sáng */
                background-color: #007bff; /* Màu nền nút tăng */
            }

                .quantity-buttons button.btn-danger {
                    background-color: #dc3545; /* Màu nền nút giảm */
                }

            .quantity-buttons input {
                width: 60px;
                text-align: center;
                background-color: #6c757d; /* Nền của ô nhập liệu */
                color: #ffffff; /* Văn bản ô nhập liệu sáng */
                border: none;
            }

        .order-container {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            gap: 20px;
            justify-items: center;
        }

        .order-title {
            margin: 20px 0;
            font-size: 24px;
            font-weight: bold;
            text-align: center;
            color: #e9ecef; /* Màu văn bản tiêu đề sáng hơn */
        }

        .section-title {
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 20px;
            text-align: center;
            color: #e9ecef; /* Màu văn bản tiêu đề phần sáng hơn */
        }

        .section {
            margin-bottom: 40px;
        }

        .footer {
            background: linear-gradient(45deg, #333, #555);
            border-radius: 15px;
            padding: 20px;
            box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.3);
            position: fixed;
            bottom: 0;
            width: 100%;
            display: none; /* Ẩn thanh footer ban đầu */
        }

        .footer-content {
            display: flex;
            flex-direction: column;
        }

        .info-panel p {
            margin: 0;
        }

        .summary-panel {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            padding: 15px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
            margin-top: 20px;
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
        }

        .summary-info p {
            margin: 5px 0;
        }

        .btn-container .btn {
            margin-left: 10px;
            padding: 12px 30px;
            font-size: 1.2em;
            border-radius: 50px;
            transition: background-color 0.3s, transform 0.2s;
        }

        .btn-container .btn-pay {
            background-color: #ff9800;
            border-color: #ff9800;
        }

            .btn-container .btn-pay:hover {
                background-color: #e65100;
                transform: scale(1.05);
            }

        .btn-container .btn-cancel {
            background-color: #f44336;
            border-color: #f44336;
        }

            .btn-container .btn-cancel:hover {
                background-color: #c62828;
                transform: scale(1.05);
            }

        .dropdown-container {
            margin: 20px auto;
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 90%;
            max-width: 400px;
        }

            .dropdown-container label {
                font-size: 18px;
                font-weight: bold;
                color: #e9ecef;
                margin-bottom: 10px;
                text-shadow: 1px 1px 2px rgba(0,0,0,0.3); /* Thêm bóng đổ cho văn bản */
            }

            .dropdown-container select {
                width: 100%;
                padding: 12px;
                border-radius: 8px;
                border: 2px solid #007bff;
                background: linear-gradient(145deg, #495057, #6c757d); /* Gradient nền */
                color: #e9ecef;
                font-size: 16px;
                transition: background 0.3s, border-color 0.3s;
                box-shadow: 0px 4px 8px rgba(0,0,0,0.2); /* Thêm bóng đổ */
            }

                .dropdown-container select:focus {
                    background: #6c757d;
                    border-color: #0056b3;
                    outline: none;
                    box-shadow: 0px 4px 10px rgba(0,0,0,0.3); /* Bóng đổ khi focus */
                }

            .dropdown-container option {
                background-color: #343a40; /* Màu nền của các tùy chọn */
                color: #e9ecef; /* Màu văn bản của các tùy chọn */
            }

        .back-button {
            position: fixed;
            top: 10px;
            left: 10px;
            background-color: #007bff;
            color: #ffffff;
            border: none;
            padding: 10px 20px;
            border-radius: 8px;
            font-size: 16px;
            cursor: pointer;
            box-shadow: 0px 4px 8px rgba(0,0,0,0.3);
            transition: background-color 0.3s, transform 0.2s;
        }

            .back-button:hover {
                background-color: #0056b3;
                transform: scale(1.05);
            }
    </style>
</head>
<body>
    <button class="back-button" onclick="window.history.back()">Quay lại</button>
    <div class="main-content">

        <div class="container mt-4">
            
            <div class="section">
                    <h3 class="section-title">Order</h3>
           
            @foreach (var item in ViewBag.foods as IEnumerable<Food>)
            {

                <!-- Combo Section -->
                
                <div class="order-container">
                    <div class="food-item">
                            <img src="~/image/Order/@item.Apphich" alt="Apphich">
                            <h3 class="name">@item.TenSanPham</h3>
                            <p class="price">@item.Gia.ToString() VND</p>
                        <div class="quantity-buttons">
                            <button class="btn btn-danger">-</button>
                                <input type="text" class="food-quantity" data-gia="@item.Gia" data-name="@item.TenSanPham" data-id="@item.IdSanPham" value="0" readonly>
                            <button class="btn btn-success">+</button>
                        </div>
                    </div>
                    <!-- Thêm nhiều mục Combo ở đây -->
                </div>
           
            }

             </div>
        </div>
    </div>

    <div class="footer">
        <div class="footer-content">
            <div class="summary-panel">
                <div class="summary-info">
                    <p>Tên Sản Phẩm:<span id="selected-orders"></span></p>
                    <p>Tổng tiền:<span id="order-amount" class="highlight"></span></p>
                </div>
            </div>
            <div class="btn-container">
                <button class="btn btn-pay" onclick="submitOrder()">Đặt hàng</button>
                <button class="btn btn-cancel" onclick="cancelSelection()">Hủy bỏ</button>
            </div>
        </div>
    </div>
    <script>
        document.querySelectorAll('.quantity-buttons').forEach(buttons => {
            const minusButton = buttons.querySelector('button.btn-danger');
            const plusButton = buttons.querySelector('button.btn-success');
            const quantityInput = buttons.querySelector('input');
            const foodItem = buttons.closest('.food-item');
            const name = foodItem.getAttribute('data-name');
            const price = parseInt(foodItem.getAttribute('data-price'));

             const quantityInputs = document.querySelectorAll('.food-quantity'); // Order item quantity inputs
              const selectedOrdersContainer = document.getElementById('selected-orders'); // Selected orders display
            // Function to update selected orders and total amount
        const updateSelectedOrders = debounce(() => {
            let orderAmount = 0;
            const selectedOrders = [];

            quantityInputs.forEach(input => {
                const id = input.getAttribute('data-id');
                const name = input.getAttribute('data-name');
                const quantity = parseInt(input.value, 10);
                const price = parseInt(input.getAttribute('data-gia'), 10);

                if (quantity > 0) {
                    const itemTotal = quantity * price;
                    orderAmount += itemTotal;
                    selectedOrders.push(`Tên sản phẩm: ${name} (Số lượng: ${quantity}, Giá: ${price.toLocaleString()} VND)`);
                }
            });

            document.getElementById("order-amount").textContent = `${orderAmount.toLocaleString()} VND`;
            selectedOrdersContainer.textContent = selectedOrders.join(', ');
        });
              function updateFooter() {
                let totalItems = 0;
                let totalPrice = 0;

                document.querySelectorAll('.food-item').forEach(item => {
                    const quantity = parseInt(item.querySelector('.quantity-buttons input').value);
                    const itemPrice = parseInt(item.getAttribute('data-price'));

                    totalItems += quantity;
                    totalPrice += quantity * itemPrice;
                });

                const footer = document.querySelector('.footer');
                const totalPriceElement = document.querySelector('#total-price');

                totalPriceElement.textContent = totalPrice.toLocaleString('vi-VN') + ' VND';

                if (totalItems > 0) {
                    footer.style.display = 'block';
                } else {
                    footer.style.display = 'none';
                }
            }

            minusButton.addEventListener('click', () => {
                let value = parseInt(quantityInput.value);
                if (value > 0) {
                    quantityInput.value = value - 1;
                    updateFooter();
                }
            });

            plusButton.addEventListener('click', () => {
                let value = parseInt(quantityInput.value);
                quantityInput.value = value + 1;
                updateFooter();
            });
        });

        function cancelSelection() {
            document.querySelectorAll('.quantity-buttons input').forEach(input => {
                input.value = '0';
            });
            updateFooter();
        }

    </script>
</body>
</html>
