@model IEnumerable<dynamic>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    ViewData["Title"] = "Danh sách hoàn vé";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<form method="get" asp-action="HoanVe">
    <div class="input-group mb-3">
        <input type="text" class="form-control" name="searchString3" placeholder="Tìm kiếm theo tên phim" value="@ViewData["SearchString3"]" />
        <button class="btn btn-primary" type="submit">Tìm kiếm</button>
    </div>
</form>

<div class="container mt-4">
    <h1 class="text-center text-primary mb-4">@ViewData["Title"]</h1>

    <div class="card shadow-lg border-0 rounded-3">
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead class="table-warning">
                        <tr>
                            <th class="text-center">IdVe</th>
                            <th class="text-center">Tên Phim</th>
                            <th class="text-center">Tên Khách Hàng</th>
                            <th class="text-center">Giờ Chiếu</th>
                            <th class="text-center">Mã Ghế Ngồi</th>
                            <th class="text-center">Giá Tiền</th>
                            <th class="text-center">Ngày Mua</th>
                            <th class="text-center">Tên Phòng</th>
                            <th class="text-center">Lý Do Hoàn Vé</th>
                            <th class="text-center">Hành động</th>
                            <!-- New column for refund reason -->
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var ticket in Model)
                        {
                                <tr>
                                    <td class="align-middle text-center">@ticket.IdVe</td>
                                    <td class="align-middle text-center">@ticket.TenPhim</td>
                                    <td class="align-middle text-center">@ticket.HoTen</td>
                                    <td class="align-middle text-center">@ticket.GioChieu.ToString("HH:mm:ss")</td>
                                    <td class="align-middle text-center">@ticket.MaGheNgoi</td>
                                    <td class="align-middle text-center">@ticket.TienBanVe.ToString("C")</td>
                                    <td class="align-middle text-center">@ticket.NgayMua?.ToString("dd/MM/yyyy")</td>
                                    <td class="align-middle text-center">@ticket.TenPhong</td>
                                    <td class="align-middle text-center">@ticket.NoiDung</td>
                                   <td>
                                   <button class="btn btn-success" onclick="confirmRefund(@ticket.IdVe)">✔</button>
                                   <button class="btn btn-danger" onclick="cancelRefund(@ticket.IdVe)">✘</button>
                                   </td>
                                </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Font Awesome for icons -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    function confirmRefund(idVe) {
        Swal.fire({
            title: 'Xác nhận hoàn vé',
            text: 'Bạn có chắc chắn muốn hoàn vé này không?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Có, hoàn vé!',
            cancelButtonText: 'Hủy'
        }).then((result) => {
            if (result.isConfirmed) {
                // Send POST request to the server to process the refund
                fetch(`Admin/ManagementTicket/XLHoanVe`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'X-Requested-With': 'XMLHttpRequest'
                    },
                    body: JSON.stringify({ idVe:idVe })
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        Swal.fire(
                            'Hoàn thành!',
                            'Vé đã được hoàn.',
                            'success'
                        ).then(() => {
                            location.reload(); // Reload page to update the list
                        });
                    } else {
                        Swal.fire(
                            'Lỗi!',
                            'Có lỗi xảy ra khi hoàn vé.',
                            'error'
                        );
                    }
                })
                .catch(error => {
                    Swal.fire(
                        'Lỗi!',
                        'Có lỗi xảy ra khi gửi yêu cầu.',
                        'error'
                    );
                });
            }
        });
    }

    function cancelRefund(idVe) {
        Swal.fire({
            title: 'Hủy hoàn vé',
            text: 'Bạn có chắc chắn muốn hủy hoàn vé này không?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Có, hủy!',
            cancelButtonText: 'Hủy'
        }).then((result) => {
            if (result.isConfirmed) {
                // Handle refund cancellation
                Swal.fire(
                    'Hủy thành công!',
                    'Vé đã được hủy hoàn.',
                    'success'
                );
            }
        });
    }
</script>



